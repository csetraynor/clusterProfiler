library(DOSE)
geneID
data(geneID)
data("geneID")
DOSE::geneID
data(DOSE::geneID)
DOSE::geneID()
?geneID
data("geneList")
de <- names(geneList)[1:100]
x <- enrichDO(de)
x
geneID(x)
devtools::document()
source("https://bioconductor.org/biocLite.R")
biocLite("DOSE")
devtools::install_github("GuangchuangYu/DOSE")
devtools::install_github("GuangchuangYu/enrichplot")
install.packages("igraph")
install.packages("igraph")
q()
devtools::install_github("GuangchuangYu/enrichplot")
devtools::document()
library(glmnet)
cvfit <- readRDS("C:/RFactory/predsurv/performance_results/enet_model_iclust2_filter.RDS")
genedata <- readr::read_tsv("C:/RFactory/Downloads/brca_metabric/data_expression.txt", col_names = TRUE)
genedata$Entrez_Gene_Id[match(names(geneList), genedata$Hugo_Symbol)]
if("age_std" %in% optimal$Hugo_Symbol){
geneTable <- optimal[(-match(c("age_std", "npi"),optimal$Hugo_Symbol)),]
}else{
geneTable <- optimal
}
geneList <- geneTable$mod
names(geneList) <- geneTable$Hugo_Symbol
brca <- readRDS("C:/RFactory/Rdata_brca/brca_data.RDS")
cvfit <- readRDS("C:/RFactory/predsurv/performance_results/ridge2_model_brca_pooled.RDS")
iclust2 <- brca[brca$intclust == 2, ]
#rm(brca)
library(glmnet)
library(dplyr)
optimal <- as.matrix(coef(cvfit, s = "lambda.min"))
optimal <- as.data.frame(optimal)
colnames(optimal) <- "mod"
optimal$Hugo_Symbol <- rownames(optimal)
optimal <- optimal %>% filter(mod!=0)
genedata$Entrez_Gene_Id[match(names(geneList), genedata$Hugo_Symbol)]
if("age_std" %in% optimal$Hugo_Symbol){
geneTable <- optimal[(-match(c("age_std", "npi"),optimal$Hugo_Symbol)),]
}else{
geneTable <- optimal
}
geneList <- geneTable$mod
genedata$Entrez_Gene_Id[match(names(geneList), genedata$Hugo_Symbol)]
names(geneList) <- geneTable$Hugo_Symbol
gene <- genedata$Entrez_Gene_Id[match(names(geneList)[abs(geneList)>quantile(abs(optimal$mod),.5)], genedata$Hugo_Symbol)]
gene.df <- clusterProfiler::bitr(gene, fromType = "ENTREZID",
toType = c("ENSEMBL", "SYMBOL"),
OrgDb = org.Hs.eg.db)
devtools::document()
gene.df <- clusterProfiler::bitr(gene, fromType = "ENTREZID",
toType = c("ENSEMBL", "SYMBOL"),
OrgDb = org.Hs.eg.db)
library(AnnotationHub)
# !diagnostics off
library(qusage)
library(AnnotationHub)
library(glmnet)
library(dplyr)
gene.df <- clusterProfiler::bitr(gene, fromType = "ENTREZID",
toType = c("ENSEMBL", "SYMBOL"),
OrgDb = org.Hs.eg.db)
library(org.Hs.eg.db)
gene.df <- clusterProfiler::bitr(gene, fromType = "ENTREZID",
toType = c("ENSEMBL", "SYMBOL"),
OrgDb = org.Hs.eg.db)
gene.df
head(gene.df)
ego <- enrichGO(gene          = gene,
universe      = names(geneList),
OrgDb         = org.Hs.eg.db,
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05)
ego <- enrichGO(gene          = gene,
universe      = names(geneList),
OrgDb         = org.Hs.eg.db,
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 0.1,
qvalueCutoff  = 0.1)
names(geneList) <- genedata$Entrez_Gene_Id[match(names(geneList), genedata$Hugo_Symbol)]
ncg <- gseNCG(sort(geneList, decreasing = TRUE),
nPerm         = 10,
minGSSize     =  2,
maxGSSize =  100,
pvalueCutoff  = 1,
pAdjustMethod = "BH",
verbose       = TRUE)
?gseNCG
library(DOSE)
ncg <- gseNCG(sort(geneList, decreasing = TRUE),
nPerm         = 10,
minGSSize     =  2,
maxGSSize =  100,
pvalueCutoff  = 1,
pAdjustMethod = "BH",
verbose       = TRUE)
ncg <- setReadable(ncg, 'org.Hs.eg.db')
head(ncg, 3)
dotplot(ncg, showCategory=30)
enrichMap(ncg, vertex.label.cex=1.2, layout=igraph::layout.kamada.kawai)
emapplot(ncg, vertex.label.cex=1.2, layout=igraph::layout.kamada.kawai)
cnetplot(ncg, foldChange=geneList)
library(DOSE)
library(GO.db)
library(org.Hs.eg.db)
library(GSEABase)
library(clusterProfiler)
install.packages("dotplot")
devtools::isntall()
devtools::install()
x <- c("GPX3",  "GLRX",   "LBP",   "CRYAB", "DEFB1", "HCLS1",   "SOD2",   "HSPA2",
"ORM1",  "IGFBP1", "PTHLH", "GPC3",  "IGFBP3","TOB1",    "MITF",   "NDRG1",
"NR1H4", "FGFR3",  "PVR",   "IL6",   "PTPRM", "ERBB2",   "NID2",   "LAMB1",
"COMP",  "PLS3",   "MCAM",  "SPP1",  "LAMC1", "COL4A2",  "COL4A1", "MYOC",
"ANXA4", "TFPI2",  "CST6",  "SLPI",  "TIMP2", "CPM",     "GGT1",   "NNMT",
"MAL",   "EEF1A2", "HGD",   "TCN2",  "CDA",   "PCCA",    "CRYM",   "PDXK",
"STC1",  "WARS",  "HMOX1", "FXYD2", "RBP4",   "SLC6A12", "KDELR3", "ITM2B")
eg = bitr(x, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
library(clusterProfiler)
eg = bitr(x, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
x <- c("GPX3",  "GLRX",   "LBP",   "CRYAB", "DEFB1", "HCLS1",   "SOD2",   "HSPA2",
"ORM1",  "IGFBP1", "PTHLH", "GPC3",  "IGFBP3","TOB1",    "MITF",   "NDRG1",
"NR1H4", "FGFR3",  "PVR",   "IL6",   "PTPRM", "ERBB2",   "NID2",   "LAMB1",
"COMP",  "PLS3",   "MCAM",  "SPP1",  "LAMC1", "COL4A2",  "COL4A1", "MYOC",
"ANXA4", "TFPI2",  "CST6",  "SLPI",  "TIMP2", "CPM",     "GGT1",   "NNMT",
"MAL",   "EEF1A2", "HGD",   "TCN2",  "CDA",   "PCCA",    "CRYM",   "PDXK",
"STC1",  "WARS",  "HMOX1", "FXYD2", "RBP4",   "SLC6A12", "KDELR3", "ITM2B")
eg = bitr(x, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
head(eg)
library(org.Hs.eg.db)
keytypes(org.Hs.eg.db)
ids <- bitr(x, fromType="SYMBOL", toType=c("UNIPROT", "ENSEMBL"), OrgDb="org.Hs.eg.db")
head(ids)
data(gcSample)
hg <- gcSample[[1]]
head(hg)
eg2np <- bitr_kegg(hg, fromType='kegg', toType='ncbi-proteinid', organism='hsa')
head(eg2np)
bitr_kegg("Z5100", fromType="kegg", toType='ncbi-geneid', organism='ece')
bitr_kegg("Z5100", fromType="kegg", toType='ncbi-proteinid', organism='ece')
bitr_kegg("Z5100", fromType="kegg", toType='uniprot', organism='ece')
ego <- enrichGO(gene          = gene,
universe      = names(geneList),
OrgDb         = org.Hs.eg.db,
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05,
readable      = TRUE)
data(geneList, package="DOSE")
gene <- names(geneList)[abs(geneList) > 2]
gene.df <- bitr(gene, fromType = "ENTREZID",
toType = c("ENSEMBL", "SYMBOL"),
OrgDb = org.Hs.eg.db)
head(gene.df)
ggo <- groupGO(gene     = gene,
OrgDb    = org.Hs.eg.db,
ont      = "CC",
level    = 3,
readable = TRUE)
head(ggo)
?org.Hs.eg.db
columns(org.Hs.eg.db)
ego <- enrichGO(gene          = gene,
universe      = names(geneList),
OrgDb         = org.Hs.eg.db,
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05,
readable      = TRUE)
head(ego)
ego2 <- enrichGO(gene         = gene.df$ENSEMBL,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENSEMBL',
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05)
ego2 <- setReadable(ego2, OrgDb = org.Hs.eg.db)
ego3 <- gseGO(geneList     = geneList,
OrgDb        = org.Hs.eg.db,
ont          = "CC",
nPerm        = 1000,
minGSSize    = 100,
maxGSSize    = 500,
pvalueCutoff = 0.05,
verbose      = FALSE)
search_kegg_organism('ece', by='kegg_code')
ecoli <- search_kegg_organism('Escherichia coli', by='scientific_name')
dim(ecoli)
head(ecoli)
kk <- enrichKEGG(gene         = gene,
organism     = 'hsa',
pvalueCutoff = 0.05)
head(kk)
kk2 <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 120,
pvalueCutoff = 0.05,
verbose      = FALSE)
head(kk2)
?enrichDO
C1 <- qusage::read.gmt("C:/RFactory/predsurv/vignettes/Gene sets/c1.all.v6.1.entrez.gmt")
C1$chr17q23
intClust1 <- C1$chr17q23
gene_names <- readRDS("C:/RFactory/Rdata_brca/gene_names.RDS")
match("GATA3", gene_names$Hugo_Symbol)
gene_names$Entrez_Gene_Id[match("GATA3", gene_names$Hugo_Symbol)]
mg <- function(x){
gene_names$Entrez_Gene_Id[match(x, gene_names$Hugo_Symbol)]
}
mg("GATA3")
intClust1 <- union(C1$chr17q23, mg("GATA3"), mg("RPS6KB1") , mg("PPM1D,"), mg("PTRH2"), mg("APPBP2")]
intClust2 <- C1$
intClust1 <- union(C1$chr17q23, mg("GATA3"), mg("RPS6KB1") , mg("PPM1D,"), mg("PTRH2"), mg("APPBP2"))
mg("GATA3"), mg("RPS6KB1") , mg("PPM1D,"), mg("PTRH2"), mg("APPBP2")
mg("GATA3")
union(C1$chr17q23, mg("GATA3"), mg("RPS6KB1") , mg("PPM1D,"), mg("PTRH2"), mg("APPBP2") )
intClust1 <- union(C1$chr17q23, mg("GATA3") )
intClust1 <- c(C1$chr17q23, mg("GATA3")  , mg("RPS6KB1") , mg("PPM1D,"), mg("PTRH2"), mg("APPBP2") )
intClust1
unique(intClust1)
unique(!is.na(intClust1))
!is.na(unique(intClust1))
unique(intClust1)
intClust1 <- unique(c(C1$chr17q23, mg("GATA3")  , mg("RPS6KB1") , mg("PPM1D,"), mg("PTRH2"), mg("APPBP2") ) )
intClust1
intClust1[!is.na(intClust1)]
intClust2 <- unique(c( C1$chr11q13, C1$chr11q14, mg("CCND1")  ,mg("EMSY")  ,mg("PAK1") ) )
intClust2
intClust2 <-intClust2[!is.na(intClust2)]
intClustGO <- as.list(intClust1,intClust2 )
intClustGO
intClustGO <- as.list(c(intClust1,intClust2 ))
intClustGO
intClustGO <- list(c(intClust1,intClust2 ))
intClustGO
intClustGO <- list(intClust1,intClust2 )
intClustGO
intClust1 <-intClust1[!is.na(intClust1)]
intClustGO <- list(intClust1,intClust2 )
intClust1
intClustGO
