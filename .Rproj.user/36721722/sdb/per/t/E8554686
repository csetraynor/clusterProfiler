{
    "collab_server" : "",
    "contents" : "options(expressions = 5e5)\n\ncna_expression <-  readRDS(\"/home/mtr/rfactory/cna_expression.RDS\")\n\nY <- readRDS(\"/home/mtr/rfactory/brca_data.RDS\")\n### cbind clinical and genomic data\nbrca_data <- cbind(Y, cna_expression)\n\n#Get brca iclust2\niclust2 <- brca_data[brca_data$intclust == 2,]\niclust2$intclust <- NULL\nbrca_data$intclust <- NULL\n\niclust2$patient_id <- NULL\nbrca_data$patient_id <- NULL\n\n\nglmnet_test <- function(dat){\n  # create predictor matrix\n  x <- dat %>% dplyr::select(-os_months, -os_deceased)\n  set.seed(9)\n  foldid <-  caret::createFolds(dat %>% select(os_deceased) %>% unlist,\n                                k = 10, list = FALSE)\n\n  #grouped enet\n  p.fac = rep(0.8, ncol(x))\n  p.fac[match(c(\"npi\",\"age_std\"), colnames(x))] = 0\n  p.fac[grep(\"cna\", colnames(x))] = 0.9\n\n  #prepare\n  x <- as.matrix(x)\n  y <- as.matrix(dat %>%\n                   dplyr::select(time = os_months,\n                                 status = os_deceased), ncol = 2)\n  mod <-  glmnet::cv.glmnet(x, y, family = \"cox\",\n                            grouped = TRUE,\n                            lambda.min.ratio = lambda, alpha = 0.8,\n                            foldid = foldid,\n                            parallel = FALSE, penalty.factor = p.fac)\n  # find optimised lambda\n  optimal <- as.matrix(coef(mod, s = \"lambda.min\"))\n  optimal <- as.data.frame(optimal)\n  colnames(optimal) <- \"mod\"\n  optimal$Hugo_symbol <- rownames(optimal)\n  optimal <-  optimal %>% filter(mod != 0)\n  return(optimal)\n}\n\n\n# This assumes that length(datlist) is much less than ncores\n# ncores <-  parallel::detectCores()\n# m <- 100\n#nw <- ncores %/% m\nsurvdata = iclust2\nlambda = 0.00001\niclust2_fit <- glmnet_test(survdata)\n\n\nsaveRDS(iclust2_fit, \"/home/mtr/rfactory/glmnet_iclust2_fit_cna.RDS\")\n\nsurvdata = brca_data\nlambda = 0.0001\npooled_fit <- glmnet_test(survdata)\n\nsaveRDS(pooled_fit, \"/home/mtr/rfactory/glmnet_pooled_fit_cna.RDS\")\n\n#10\n",
    "created" : 1526895224161.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "915214020",
    "id" : "E8554686",
    "lastKnownWriteTime" : 1526851563,
    "last_content_update" : 1526851563,
    "path" : "E:/R-Factory/WIN Symposium/vignette_cv.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}